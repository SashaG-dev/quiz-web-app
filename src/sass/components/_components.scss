@use '../abstracts/variables' as var;
@use '../abstracts/mixins' as mix;

.btn {
  color: var(--white);
  font-family: 'Barlow';
  font-weight: 500;
  text-transform: uppercase;
  background-color: var(--black);
  padding: 0.8rem 1.6rem;
  border-radius: var.$radius-sm;
  border: none;
  transition: var.$transitions;
  cursor: pointer;

  &:link,
  &:visited {
    text-decoration: none;
  }

  &:hover,
  &:active,
  &:focus-visible {
    color: var(--black);
    background-color: var(--white);
  }

  &--blue {
    color: var(--black);
    background-color: var(--blue);

    &:hover,
    &:active,
    &:focus-visible {
      background-color: var(--white);
    }
  }

  &--white {
    color: var(--black);
    background-color: var(--white);
    border: 1px solid var(--light-gray);

    &:hover,
    &:active,
    &:focus-visible {
      color: var(--white);
      background-color: var(--black);
      border: var.$border-black;
    }
  }

  &--underline {
    font-family: 'Barlow';
    background-color: transparent;
    text-decoration: underline;
    padding: 0;

    &:hover,
    &:focus-visible {
      outline: none;
      text-decoration: none;
    }
  }
}

.container {
  min-height: 100vh;

  @include mix.respond(desk-lg) {
    margin: 0 auto;
  }

  &--grid {
    display: grid;
    grid-template-columns: 1fr;
    grid-template-rows: min-content 1fr;
    height: 100%;
    position: relative;
    max-width: 120rem;
    margin: 0 auto;
  }
}

.overlay {
  height: 100vh;
  width: 100%;
  position: fixed;
  top: 0;
  left: 0;
  background-color: rgba(0, 0, 0, 0.32);
  backdrop-filter: blur(5px);
  z-index: 20;
}
